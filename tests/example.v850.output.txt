    ; assembly                           | /* jsdec pseudo code output */
                                         | /* testsuite @ 0x0 */
                                         | #include <stdint.h>
                                         |  
    ; (fcn) fcn.0023fec ()               | void fcn_0023fec () {
                                         |     /* link pointer is lost. (used r0) */
    0x00023fec jarl 0x00185084, r0       |     void (*0x00185084)() ();
    0x00023ff0 ld.h 0x6c36[r4], r14      |     r14 = *((int16_t*) (r4 + 0x6c36));
    0x00023ff4 movhi 0x2, r0, r1         |     
    0x00023ff8 ld.h 0x703a[r1], r13      |     r13 = *((int16_t*) (r1 + 0x703a));
    0x00023ffc movhi 0x2, r0, r1         |     
    0x00024000 ld.h 0x7038[r1], r12      |     r12 = *((int16_t*) (r1 + 0x7038));
    0x00024004 cmp r13, r14              |     
                                         |     if (r14 <= r13) {
    0x00024006 ble 0x0002400c            |         
    0x00024008 mov r13, r11              |         r11 = r13;
    0x0002400a b 0x00024016              |         
                                         |     } else {
    0x0002400c cmp r12, r14              |         
                                         |         if (r14 >= r12) {
    0x0002400e bge 0x00024014            |             
    0x00024010 mov r12, r11              |             r11 = r12;
    0x00024012 b 0x00024016              |             
                                         |         } else {
    0x00024014 mov r14, r11              |             r11 = r14;
                                         |         }
                                         |     }
    0x00024016 movea 0x8001, r0, r27     |     r27 = 0x8001;
    0x0002401a mov r11, r12              |     r12 = r11;
    0x0002401c mulh r11, r0              |     
    0x0002401e cmp r27, r11              |     
    0x00024020 mulh r12, r0              |     
                                         |     if (r11 >= r27) {
    0x00024022 bge 0x0002402c            |         
    0x00024024 movea 0x7fff, r0, r11     |         r11 = 0x7fff;
    0x00024028 b 0x0002403c              |         goto label_0;
    0x0002402a mov r0, r0                |         
                                         |     }
    0x0002402c cmp r0, r12               |     
                                         |     if (r12 >= 0) {
    0x0002402e bge 0x00024038            |         
    0x00024030 not r12, r11              |         r11 = ~r12;
    0x00024032 add 1, r11                |         r11++;
    0x00024034 satadd r11, r0            |         
    0x00024036 b 0x0002403c              |         
                                         |     } else {
    0x00024038 satadd r12, r0            |         
    0x0002403a mov r12, r11              |         r11 = r12;
                                         |     }
                                         | label_0:
    0x0002403c shr 4, r11                |     r11 >>= 4;
    0x0002403e satsubr r11, r0           |     
    0x00024040 ld.w 0x6cc8[r4], r6       |     r6 = *((uint32_t*) (r4 + 0x6cc8));
    0x00024044 mov r11, r26              |     r26 = r11;
    0x00024046 mov r11, r7               |     r7 = r11;
                                         |     /* r31 = PC + 4; */
    0x00024048 jarl 0x0047d43e, r31      |     return void (*0x0047d43e)() ();
                                         | }
